
══════════════════════════════════════════════════════════════
maps attributes : 
STL : 
Empty       : false
Size        : 5
Max size    : 256204778801521550
Content     : [[-325, Three], [-98, Five], [-65, Four], [99, Two], [859, One], ]

FT : 
Empty    [✔]: false
Size     [✔]: 5
Max size [✔]: 256204778801521550
Content  [✔]: []
══════════════════════════════════════════════════════════════

══════════════════════════════════════════════════════════════
Value from :
STL    : 859
FT  [✔]: 859
══════════════════════════════════════════════════════════════

══════════════════════════════════════════════════════════════
Value from :
STL    : One
FT  [✔]: One
══════════════════════════════════════════════════════════════

Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
const int range_int[] = {859, 99, -325, -65, -98};
const std::string range_str[] = {"One", "Two", "Three", "Four", "Five"};
ft::map<int, std::string> ft_map;
for (int i = 0; i < 5; i++)
    ft_map.insert(ft::make_pair(range_int[i], range_str[i]));
ft::map<int, std::string>::const_reverse_iterator ft_it = ft_map.rbegin();

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
const int range_int[] = {859, 99, -325, -65, -98};
const std::string range_str[] = {"One", "Two", "Three", "Four", "Five"};
std::map<int, std::string> stl_map;
for (int i = 0; i < 5; i++)
    stl_map.insert(std::make_pair(range_int[i], range_str[i]));
std::map<int, std::string>::const_reverse_iterator stl_it = stl_map.rbegin();
